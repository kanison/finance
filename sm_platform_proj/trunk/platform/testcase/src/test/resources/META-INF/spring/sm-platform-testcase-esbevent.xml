<?xml version="1.0" encoding="GBK"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		 http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/osgi
         http://www.springframework.org/schema/osgi/spring-osgi.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/jms
         http://www.springframework.org/schema/jms/spring-jms.xsd"
	default-autowire="byName">
	
	<bean id="jmsConnectionFactoryForTestPublishAndSubscriber" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="userName"><value></value></property>
		<property name="password"><value></value></property>
		<property name="brokerURL"><value>tcp://localhost:61616</value></property>
	</bean>
	
	<bean id="jmsTemplateForTestPublish" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory"><ref bean="jmsConnectionFactoryForTestPublishAndSubscriber"/></property>
		<property name="defaultDestinationName"><value>User.Topic</value></property>
		<property name="pubSubDomain"><value>true</value></property>
		<property name="explicitQosEnabled"><value>true</value></property>
		<property name="pubSubNoLocal"><value>true</value></property>
		<property name="deliveryMode"><value>2</value></property>
		<property name="timeToLive"><value>600000</value></property>
		<property name="sessionTransacted"><value>true</value></property>
		<property name="sessionAcknowledgeMode"><value>2</value></property>
	</bean>
	<bean id="esbEventEngine" class="com.tenpay.sm.event.engine.EsbEventEngineImpl">
		<property name="defaultJmsTemplate" ref="jmsTemplateForTestPublish"></property>
		<property name="jmsTemplates">
			<map>
				<entry key="hello">
					<ref bean="jmsTemplateForTestPublish"/>
				</entry>
			</map>
		</property>
	</bean>
	
	<!--
	<bean id="jmsEsbEventListenerForTestSubscriber" class="com.tenpay.sm.test.esbevent.MyEsbEventListener"></bean>
	<bean id="jmsContainerForTestSubscriber" class="org.springframework.jms.listener.DefaultMessageListenerContainer"> 
		<property name="concurrentConsumers" value="1"/>
		<property name="connectionFactory" ref="jmsConnectionFactoryForTestPublishAndSubscriber" /> 
		<property name="destinationName" value="User.Topic" />
		<property name="pubSubDomain" value="true" />
		<property name="messageListener" ref="jmsEsbEventListenerForTestSubscriber" /> 
	</bean> -->

	<bean id="esbEventShowFrame1" class="com.tenpay.sm.test.esbevent.EsbEventShowFrame"><property name="title" value="风控"/></bean>
	<bean id="jmsContainerForEsbEventShowFrame1" class="org.springframework.jms.listener.DefaultMessageListenerContainer"> 
		<property name="concurrentConsumers" value="1"/>
		<property name="connectionFactory" ref="jmsConnectionFactoryForTestPublishAndSubscriber" /> 
		<property name="destinationName" value="User.Topic" />
		<property name="pubSubDomain" value="true" />
		<property name="messageListener">
			<bean class="com.tenpay.sm.event.listener.EsbEventMessageListener">
				<property name="esbEventListener"><ref bean="esbEventShowFrame1"/></property>
			</bean>
		</property>
	</bean> 
	
	<bean id="esbEventShowFrame2" class="com.tenpay.sm.test.esbevent.EsbEventShowFrame"><property name="title" value="沟通"/></bean>
	<bean id="jmsContainerForEsbEventShowFrame2" class="org.springframework.jms.listener.serversession.ServerSessionMessageListenerContainer"> 
		<!-- <property name="concurrentConsumers" value="1"/>-->
		<property name="connectionFactory" ref="jmsConnectionFactoryForTestPublishAndSubscriber" /> 
		<property name="destinationName" value="User.Topic" />
		<property name="pubSubDomain" value="true" />
		<property name="messageListener">
			<bean class="com.tenpay.sm.event.listener.EsbEventMessageListener">
				<property name="esbEventListener"><ref bean="esbEventShowFrame2"/></property>
			</bean>
		</property>
	</bean>
	
	<!-- 
	<bean id="jmsConnectionFactoryForTestSubscriber" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="userName"><value></value></property>
		<property name="password"><value></value></property>
		<property name="brokerURL"><value>tcp://172.25.38.56:443</value></property>
	</bean>
	<bean id="esbEventShowFrame3" class="com.tenpay.sm.test.esbevent.EsbEventShowFrame"><property name="title" value="银行回调"/></bean>
	<bean id="jmsContainerForEsbEventShowFrame3" class="org.springframework.jms.listener.serversession.ServerSessionMessageListenerContainer"> 
		<property name="connectionFactory" ref="jmsConnectionFactoryForTestSubscriber" /> 
		<property name="destinationName" value="Topic.SaveAndPay" />
		<property name="pubSubDomain" value="true" />
		<property name="messageListener">
			<bean class="com.tenpay.sm.event.listener.EsbEventMessageListener">
				<property name="esbEventListener"><ref bean="esbEventShowFrame3"/></property>
			</bean>
		</property>
	</bean>
	-->
	
	<!-- 以下是所有调度Trigger的集合 -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<!--<ref bean="jmsTriggerBeanForTestSubscriber"/>-->
				<!--<ref bean="esbEventShowTriggerBean1"/>-->
				<!--<ref bean="esbEventShowTriggerBean2"/>-->
			</list>
		</property>
	</bean>
	<!-- 以下是使用quartz做的模拟mdb，有误，废弃，放着只是演示quartz的使用
	<bean id="jmsTemplateForTestSubscriber" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory"><ref bean="jmsConnectionFactoryForTestPublishAndSubscriber"/></property>
		<property name="defaultDestinationName"><value>User.Topic</value></property>
		<property name="pubSubDomain"><value>true</value></property>
		<property name="receiveTimeout"><value>10000</value></property>
	</bean>
	<bean id="jmsReceiveJobForTestSubscriber" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass"><value>com.tenpay.sm.event.listener.EsbEventListenerQuartzJob</value></property>
		<property name="jobDataAsMap">
			<map>
				<entry key="esbEventListener">
					<ref bean="jmsEsbEventListenerForTestSubscriber"/>
				</entry>
				<entry key="defaultJmsTemplate">
					<ref bean="jmsTemplateForTestSubscriber"/>
				</entry>				
				<entry key="jobIndex">
					<value>101</value>
				</entry>
			</map>
		</property>
	</bean>
	<bean id="jmsTriggerBeanForTestSubscriber" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail"><ref bean="jmsReceiveJobForTestSubscriber"></ref></property>
		<property name="startDelay"><value>0</value></property>
		<property name="repeatInterval"><value>100</value></property>
	</bean>
	 -->
	 
	<!--  
	<bean id="jmsConnectionFactory1" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="userName"><value></value></property>
		<property name="password"><value></value></property>
		<property name="brokerURL"><value>tcp://localhost:61616</value></property>
	</bean>
	<bean id="jmsTemplateForSubscriber1" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory"><ref bean="jmsConnectionFactory1"/></property>
		<property name="defaultDestinationName"><value>User.Topic</value></property>
		<property name="pubSubDomain"><value>true</value></property>
	</bean>
	<bean id="esbEventShowJob1" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass"><value>com.tenpay.sm.event.listener.EsbEventListenerQuartzJob</value></property>
		<property name="jobDataAsMap">
			<map>
				<entry key="esbEventListener">
					<ref bean="esbEventShowFrame1"/>
				</entry>
				<entry key="defaultJmsTemplate">
					<ref bean="jmsTemplateForSubscriber1"/>
				</entry>
				<entry key="jobIndex">
					<value>209</value>
				</entry>				
			</map>
		</property>
	</bean>
	<bean id="esbEventShowTriggerBean1" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail"><ref bean="esbEventShowJob1"></ref></property>
		<property name="startDelay"><value>0</value></property>
		<property name="repeatInterval"><value>1</value></property>
	</bean>
	-->
	
	<!-- 
	<bean id="jmsConnectionFactory2" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="userName"><value></value></property>
		<property name="password"><value></value></property>
		<property name="brokerURL"><value>tcp://localhost:61616</value></property>
	</bean>
	<bean id="jmsTemplateForSubscriber2" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory"><ref bean="jmsConnectionFactory2"/></property>
		<property name="defaultDestinationName"><value>User.Topic</value></property>
		<property name="pubSubDomain"><value>true</value></property>
		<property name="receiveTimeout"><value>0</value></property>
		<property name="explicitQosEnabled"><value>true</value></property>
		<property name="pubSubNoLocal"><value>true</value></property>
		<property name="sessionTransacted"><value>true</value></property>
		<property name="sessionAcknowledgeMode"><value>2</value></property>
	</bean>
	<bean id="esbEventShowJob2" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass"><value>com.tenpay.sm.event.listener.EsbEventListenerQuartzJob</value></property>
		<property name="jobDataAsMap">
			<map>
				<entry key="esbEventListener">
					<ref bean="esbEventShowFrame2"/>
				</entry>
				<entry key="defaultJmsTemplate">
					<ref bean="jmsTemplateForSubscriber2"/>
				</entry>	
				<entry key="jobIndex">
					<value>210</value>
				</entry>								
			</map>
		</property>
	</bean>
	<bean id="esbEventShowTriggerBean2" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="jobDetail"><ref bean="esbEventShowJob2"></ref></property>
		<property name="startDelay"><value>0</value></property>
		<property name="repeatInterval"><value>1</value></property>
	</bean>
	 -->
	
	<!--<jms:listener-container connection-factory="jmsConnectionFactory"
		destination-type="topic" concurrency="10"
		transaction-manager="transactionManager">
		<jms:listener destination="JMSServer-0/SystemModule-0!Queue-0"
			ref="exampleMessageListenerAdapter" />
	</jms:listener-container>
	<jms:listener-container connection-factory="jmsConnectionFactoryForTestPublishAndSubscriber"
		destination-type="topic" concurrency="10">
		 <jms:listener destination="User.Topic" ref="jmsContainerForTestSubscriber" />
	</jms:listener-container>
	-->
	

</beans>
